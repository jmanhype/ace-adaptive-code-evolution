name: ACE CI

on:
  push:
    branches: ["main"]
    paths:
      - 'ace_standalone/**'
  pull_request:
    branches: ["main"]
    paths:
      - 'ace_standalone/**'

env:
  MIX_ENV: test
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres
  POSTGRES_DB: ace_test

permissions:
  contents: read

jobs:
  test:
    services:
      db:
        image: postgres:16
        ports: ["5432:5432"]
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: ace_test
        options: --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    runs-on: ubuntu-latest
    name: Test on OTP ${{matrix.otp}} / Elixir ${{matrix.elixir}}
    defaults:
      run:
        working-directory: ./ace_standalone
    strategy:
      matrix:
        otp: ["27.2"]
        elixir: ["1.18"]
    steps:
      # Step: Setup Elixir + Erlang image as the base.
      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          otp-version: ${{matrix.otp}}
          elixir-version: ${{matrix.elixir}}

      # Step: Check out the code.
      - name: Checkout code
        uses: actions/checkout@v4

      # Step: Define how to cache deps. Restores existing cache if present.
      - name: Cache deps
        id: cache-deps
        uses: actions/cache@v3
        env:
          cache-name: cache-ace-deps
        with:
          path: ace_standalone/deps
          key: ${{ runner.os }}-mix-${{ env.cache-name }}-${{ hashFiles('ace_standalone/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-${{ env.cache-name }}-

      # Step: Define how to cache the `_build` directory.
      - name: Cache compiled build
        id: cache-build
        uses: actions/cache@v3
        env:
          cache-name: cache-ace-compiled-build
        with:
          path: ace_standalone/_build
          key: ${{ runner.os }}-mix-${{ env.cache-name }}-${{ hashFiles('ace_standalone/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-${{ env.cache-name }}-
            ${{ runner.os }}-mix-

      # Step: Conditionally bust the cache when job is re-run.
      - name: Clean to rule out incremental build as a source of flakiness
        if: github.run_attempt != '1'
        run: |
          mix deps.clean --all
          mix clean
        shell: sh

      # Step: Download project dependencies.
      - name: Install dependencies
        run: mix deps.get

      # Step: Compile the project
      - name: Compile the project
        run: mix compile --warnings-as-errors

      # Step: Check for unused deps 
      - name: Check for unused deps
        run: mix deps.unlock --check-unused

      # Step: Format check
      - name: Check Formatting
        run: mix format --check-formatted

      # Step: Run static code analysis
      - name: Run Credo
        run: mix credo --strict

      # Step: Run type checking
      - name: Run Dialyzer
        run: mix dialyzer

      # Step: Execute the tests
      - name: Run tests
        run: mix test --trace
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_HOST: localhost
          
  build-cli:
    needs: test
    runs-on: ubuntu-latest
    name: Build ACE CLI
    defaults:
      run:
        working-directory: ./ace_standalone
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          otp-version: "27.2"
          elixir-version: "1.18"
          
      - name: Install dependencies
        run: mix deps.get
        
      - name: Compile project
        run: MIX_ENV=prod mix compile
        
      - name: Build CLI executable
        run: MIX_ENV=prod mix escript.build
        
      - name: Upload CLI artifact
        uses: actions/upload-artifact@v3
        with:
          name: ace-cli
          path: ace_standalone/ace
          retention-days: 7